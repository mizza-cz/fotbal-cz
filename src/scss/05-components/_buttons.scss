$iconButtonSize: 2.5rem;
$iconButton-iconSize: 1rem;

@mixin iconButton-icon($width: $iconButton-iconSize, $height: $iconButton-iconSize) {
  width: $width;
  height: $height;
}

.Button {
  display: inline-block;
  font-family: $fontFamilySecondary;
  @include text($colorTertiary, $fontSizeSmall, $fontWeightSemiBold, 1.571);
  text-align: center;
  text-decoration: none;
  text-decoration-color: transparent;
  background-color: transparent;
  border: 2px solid $colorTertiary;
  border-radius: $borderRadiusPrimary;
  cursor: pointer;
  padding: rem(4px) rem(12px);
  transition: color 0.25s linear, outline-offset 0.25s linear, text-decoration-color 0.25s linear, transform 0.25s ease-in-out;

  &:not(.Button--disabled):focus-visible {
    text-decoration: underline;
    text-decoration-color: $colorTertiary;
    text-decoration-thickness: 0.125rem;
  }

  &:not(.Button--disabled):hover {
    text-decoration-line: underline;
    text-decoration-color: $colorTertiary;
    text-decoration-thickness: 0.125rem;
  }

  &:active {
    transform: scale(0.9);
  }

  &-icon {
    @include iconButton-icon();
    margin-right: 0.5rem;

    &.is-anim {
      display: block;
      animation-name: showButtonIcon;
      animation-duration: 0.25s;
      animation-timing-function: ease-in-out;
      animation-direction: alternate;
      animation-fill-mode: forwards;
      animation-iteration-count: 1;
    }
  }

  &--small {
    font-size: 0.875rem;
    padding: rem(10px) rem(20px);
  }

  &--big {
    font-size: 1.125rem;
    padding: rem(16px) rem(32px);
  }

  &--withIcon {
    display: flex;
    align-items: center;
  }

  &--disabled {
    color: $colorGrey--90;
    border-color: $colorGrey--90;
    pointer-events: none;

    &:focus {
      outline: none !important;
    }
  }
}

.CloseButton {
  display: inline-flex;
  flex-shrink: 0;
  justify-content: center;
  align-items: center;
  width: $iconButtonSize;
  height: $iconButtonSize;
  background-color: rgba($colorGrey, 0.5);
  border-radius: 50%;
  transition: background-color 0.25s ease;

  &:focus,
  &:hover {
    background-color: $colorGrey;
  }

  &-icon {
    @include iconButton-icon();
  }
}

.MenuButton {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  top: 0;
  right: 0;
  background-color: transparent;
  border-left: $borderPrimary;
  padding: 1.45rem 1rem;
  z-index: z(mobileMenuBtn);

  @include respondFrom(xl) {
    display: none;
  }

  &:focus {
    outline: none;
  }

  &-text {
    font-family: $fontFamilySecondary;
    @include text($colorText, $fontSizeNormal, $fontWeightBold, 1);
    text-transform: uppercase;
  }

  &-layers {
    display: block;
    width: 1.25rem;
    height: 0.125rem;
    position: relative;
    background-color: $colorBlack;
    border-radius: 0.0625rem;
    transform-origin: center;
    transition: background-color 0.25s ease-in-out;

    &::before,
    &::after {
      content: "";
      display: inherit;
      width: inherit;
      height: inherit;
      position: absolute;
      top: 0;
      left: 0;
      background-color: $colorBlack;
      border-radius: inherit;
      transform-origin: center;
      transition: top 0.25s ease-in-out 0.25s, transform 0.25s ease-in-out 0s;
    }

    &::before {
      top: -0.375rem;
      transform: rotate(0deg);
    }

    &::after {
      top: 0.375rem;
      transform: rotate(0deg);
    }
  }

  &-text + &-layers {
    margin-left: 0.5rem;
  }

  &.is-active {
    .MenuButton-layers {
      background-color: transparent;

      &::before,
      &::after {
        transition: top 0.25s ease-in-out, transform 0.25s ease-in-out 0.25s;
      }

      &::before {
        top: 0;
        transform: rotate(45deg);
      }

      &::after {
        top: 0;
        transform: rotate(-45deg);
      }
    }
  }
}

.PlayButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  width: rem(56px);
  height: rem(56px);
  background: rgba(225, 231, 236, 0.5);
  border-radius: 50%;
  box-shadow: 0px 4px 52px #143c6c;
  backdrop-filter: blur(3px);

  &-icon {
    width: 1.5rem;
    height: 1.5rem;
  }
}

.QuantityButton {
  display: inline-flex;
  flex-shrink: 0;
  width: 1.5rem;
  height: 1.5rem;
  transition: transform 0.25s ease;

  &-icon {
    width: 100%;
    height: 100%;
    transition: stroke 0.25s ease;
  }

  &:focus,
  &:hover {
    .QuantityButton-icon {
      stroke: $colorPrimary;
    }
  }

  &:active {
    transform: scale(1.2);
  }
}

.ToggleButton {
  display: inline-flex;
  align-items: center;
  font-family: $fontFamilySecondary;
  @include text($colorText, $fontSizeExtraSmall, $fontWeightSemiBold, 1.33);
  text-transform: uppercase;
  padding: 0.75rem 1rem;
  transition: color 0.25s ease;

  svg {
    margin-left: 0.5rem;
    transition: fill 0.25s ease, transform 0.25s ease-in-out;
  }

  &.is-active {
    color: $colorTertiary;

    svg {
      fill: $colorTertiary;
      transform: rotateX(180deg);
    }
  }

  &--collapse {
    font-family: $fontFamilyPrimary;
    @include text($colorTertiary, $fontSizeNormal, $fontWeightNormal, inherit);
    text-transform: none;
    padding: rem(10px) 0;

    svg {
      fill: $colorTertiary;
    }
  }
}

.ToggleIconButton {
  display: inline-flex;

  svg {
    fill: $colorBlack;
    transition: fill 0.25s ease;
  }

  &:focus,
  &:hover {
    svg {
      fill: $colorTertiary;
    }
  }

  &.is-active {
    svg {
      transform: rotateX(180deg);

      path {
        fill: $colorTertiary;
      }
    }
  }
}

.ToTopButton {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: $iconButtonSize;
  height: $iconButtonSize;
  background-color: rgba($colorGrey, 0.5);
  border-radius: 50%;
  transition: background-color 0.25s ease;

  &-icon {
    @include iconButton-icon();
  }

  &:focus,
  &:hover {
    background-color: $colorGrey;

    .ToTopButton-icon {
      animation-name: toTopButtonIconBounce;
      animation-duration: 0.4s;
      animation-timing-function: $easeInOutQuad;
      animation-direction: alternate;
      animation-fill-mode: forwards;
      animation-iteration-count: infinite;
    }
  }
}

@keyframes goOnButtonIconBounce {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(0.5rem);
  }
}

@keyframes toTopButtonIconBounce {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(-0.5rem);
  }
}

@keyframes showButtonIcon {
  0% {
    scale: 0;
  }
  100% {
    scale: 1;
  }
}
