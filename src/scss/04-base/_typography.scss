html {
  font-family: $fontFamilyPrimary;
  @include text($colorText, 100%, $fontWeightNormal, 1.5);
}

h1,
.H1,
h2,
.H2,
h3,
.H3,
h4,
.H4,
h5,
.H5,
h6,
.H6,
.H7,
.H8,
.H9 {
  font-family: $fontFamilySecondary;
}

h1,
.H1 {
  @include text($colorHeading, 3.5rem, $fontWeightSemiBold, 1.143);

  @include respondTo(sm) {
    font-size: 3rem;
  }

  @include respondTo(xs) {
    font-size: 2.5rem;
  }
}

h2,
.H2 {
  @include text($colorHeading, 3rem, $fontWeightSemiBold, 1.167);

  @include respondTo(sm) {
    font-size: 2.5rem;
    line-height: 1.25;
  }

  @include respondTo(xs) {
    font-size: 1.5rem;
    line-height: 1.33;
  }
}

h3,
.H3 {
  @include text($colorHeading, 2.5rem, $fontWeightSemiBold, 1.2);

  @include respondTo(sm) {
    font-size: 2rem;
  }

  @include respondTo(xs) {
    font-size: 1.5rem;
  }
}

h4,
.H4 {
  @include text($colorHeading, 2rem, $fontWeightSemiBold, 1.25);

  @include respondTo(sm) {
    font-size: 1.75rem;
  }

  @include respondTo(xs) {
    font-size: 1.5rem;
  }
}

h5,
.H5 {
  @include text($colorHeading, 1.5rem, $fontWeightSemiBold, 1.333);

  @include respondTo(sm) {
    font-size: 1.25rem;
  }

  @include respondTo(xs) {
    font-size: 1rem;
    line-height: 1.5;
  }
}

h6,
.H6 {
  @include text($colorHeading, 1.25rem, $fontWeightSemiBold, 1.4);

  @include respondTo(sm) {
    font-size: 1.125rem;
  }

  @include respondTo(xs) {
    font-size: 1rem;
  }
}

.H7 {
  @include text($colorHeading, 1rem, $fontWeightSemiBold, 1.5);
}

.H8 {
  @include text($colorHeading, 0.875rem, $fontWeightSemiBold, 1.571);
}

.H9 {
  @include text($colorHeading, 0.75rem, $fontWeightSemiBold, 1.333);
}

.H1,
.H2,
.H3,
.H4,
.H5,
.H6,
.H7,
.H8,
.H9 {
  &--stretched {
    letter-spacing: 3px;
  }

  &--partners {
    max-width: 20ch;
    letter-spacing: 3px;

    @include respondTo(md) {
      max-width: none;
      text-align: center;
      padding: 0 2.5rem;
      margin: 0 auto;
    }
  }

  &--withLogo {
    display: flex;
    align-items: center;

    .Logo {
      margin-right: 1.5rem;

      @include respondTo(xs) {
        margin-right: 1rem;
      }
    }
  }
}

.PageHeading {
  @include text($colorHeading, 1.5rem, $fontWeightBold, 2rem);
  margin-bottom: 1.5rem;
}

.SubHeading {
  @include text($colorHeading, 1.313rem, $fontWeightBold, normal);
  margin-bottom: 1rem;
}

p,
.Text {
  @include text($colorText, $fontSizeNormal, $fontWeightNormal, inherit);
}

.DecorativeParagraph {
  min-height: rem(73px);
  font-size: $fontSizeExtraBig;
  background-image: url(../img/decor-rotate.svg);
  background-position: left center;
  background-repeat: no-repeat;
  background-size: rem(60px) rem(73px);
  padding-left: rem(82px);
}

.Perex {
  @include text($colorText, 1.25rem, $fontWeightBold, inherit);
}

.Date {
  display: inline-block;
  font-family: $fontFamilySecondary;
  @include text($colorGrey--100, $fontSizeExtraSmall, $fontWeightSemiBold, 1.333);
}

.Badge {
  display: inline-block;
  position: relative;
  font-family: $fontFamilySecondary;
  @include text($colorWhite, $fontSizeExtraSmall, $fontWeightSemiBold, 1);
  text-transform: uppercase;
  text-decoration: none;
  text-decoration-color: transparent;
  white-space: nowrap;
  background-color: $colorSecondary;
  padding: 0.25rem 0.375rem;
  transition: color 0.25s linear, outline-offset 0.25s linear, text-decoration-color 0.25s linear;
  z-index: z(badge);

  &:focus,
  &:hover {
    color: $colorWhite;
    text-decoration: underline;
    text-decoration-color: currentColor;
  }

  &::after {
    content: '';
    width: 0;
    height: 0;
    position: absolute;
    right: -0.75rem;
    bottom: 0;
    border-style: solid;
    border-width: 0.75rem 0.75rem 0 0;
    border-color: $colorRed--100 transparent transparent transparent;
  }

  &--blue {
    background-color: $colorBlue--90;

    &::after {
      border-top-color: $colorBlue;
    }
  }

  &--green {
    background-color: $colorGreen;

    &::after {
      border-top-color: $colorGreen--100;
    }
  }

  & + & {
    margin-left: 1rem;
  }
}

span.Badge {
  pointer-events: none;
}

.BadgeCategory {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  width: rem(20px);
  height: rem(20px);
  @include text($colorWhite, $fontSizeExtraSmall, $fontWeightSemiBold, 1);
  text-decoration: none;
  border-radius: $borderRadiusSecondary;
  cursor: default;

  &.BadgeCategoryInline {
    width: auto;
    height: auto;
    line-height: rem(20px);
    padding-inline: 0.5rem;
  }

  &--men {
    background-color: $colorBlue--100;
  }

  &--youth {
    background-color: #009926;
  }

  &--women {
    background-color: $colorRed;
  }

  &--futsal {
    background-color: $colorGreen;
  }

  &--fotbal {
    background-color: $colorGreen--100;
  }

  &--beach {
    background-color: #e9761e;
  }

  & + & {
    margin-left: 0.125rem;
  }
}

a {
  @include text(inherit, inherit, inherit, inherit);
  text-decoration: underline;
  cursor: pointer;
  outline: 2px solid transparent;
  outline-offset: 4px;
  transition: color 0.25s linear, outline-offset 0.25s linear;

  &:focus {
    outline-color: currentColor;
    outline-offset: 2px;
  }

  // &:hover {
  //   color: darken($colorPrimary, 5%);
  // }
}

.Link {
  font-family: $fontFamilySecondary;
  @include text($colorTertiary, $fontSizeNormal, $fontWeightSemiBold, 1.5);
  text-decoration: underline;
  text-decoration-color: currentColor;
  text-decoration-thickness: 0.125rem;
  cursor: pointer;
  outline: 2px solid transparent;
  outline-offset: 4px;
  transition: color 0.25s linear, outline-offset 0.25s linear;

  &:focus {
    outline-color: currentColor;
    outline-offset: 2px;
  }

  &--anchor {
    display: inline-block;

    &:focus,
    &:hover {
      background-image: url(../img/icons/hash-white.svg);
      background-position: center right;
      background-repeat: no-repeat;
      padding-right: 2rem;
    }
  }

  &--complex {
    display: flex;
  }

  &--back {
    display: inline-block;
    color: $colorSecondary !important;
    font-size: $fontSizeSmall;
    background-image: url(../img/icons/arrow-left-red.svg);
    background-position: center left;
    background-repeat: no-repeat;
    background-size: 1rem 1rem;
    padding-left: 1.25rem;
  }

  &--forward {
    display: inline-block;
    min-height: 1rem;
    color: $colorSecondary !important;
    font-size: $fontSizeSmall;
    background-image: url(../img/icons/arrow-right-red.svg);
    background-position: center left;
    background-repeat: no-repeat;
    background-size: 1rem 1rem;
    padding-right: 1.25rem;
  }

  &--inverted {
    text-decoration: none;
    text-decoration-color: transparent;
    transition: color 0.25s linear, outline-offset 0.25s linear, text-decoration-color 0.25s linear;

    &:focus,
    &:hover {
      text-decoration: underline;
      text-decoration-color: currentColor;
      text-decoration-thickness: 0.125rem;
    }
  }

  &--invertedThin {
    text-decoration: none;
    text-decoration-color: transparent;
    transition: color 0.25s linear, outline-offset 0.25s linear, text-decoration-color 0.25s linear;

    &:focus,
    &:hover {
      text-decoration: underline;
      text-decoration-color: currentColor;
    }
  }

  &--stretched {
    white-space: normal;

    &::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: 1;
      pointer-events: auto;
    }
  }

  &--overlay {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    text-indent: -9999px;
    z-index: 1;
  }
}

.DecorativeLink {
  display: inline-block;
  position: relative;
  @include text($colorSecondary, $fontSizeSmall, $fontWeightNormal, 1.2);
  text-decoration: none;
  cursor: pointer;
  outline: 2px solid transparent;
  outline-offset: 4px;
  transition: color 0.25s linear, outline-offset 0.25s linear;

  &::after {
    content: '';
    display: block;
    width: 2rem;
    height: 0.125rem;
    position: absolute;
    left: 0;
    bottom: -0.25rem;
    background-color: $colorSecondary;
    transition: width 0.25s ease-in-out;
  }

  &:focus,
  &:hover,
  &:active {
    &::after {
      width: 100%;
    }
  }
}

b,
strong {
  font-weight: $fontWeightSemiBold;
}

.Highlight {
  background-image: linear-gradient(rgba($colorSecondary, 0.4), rgba($colorSecondary, 0.4));
  background-repeat: repeat-x;
  background-position: 0 90%;
  background-size: rem(1px) rem(6px);
}

.Quotation {
  display: grid;
  grid-template-areas:
    'img text'
    'img author';
  gap: 1rem 1.5rem;
  max-width: 90%;

  @include respondTo(sm) {
    max-width: none;
  }

  @include respondTo(xs) {
    grid-template-columns: 10rem auto;
    grid-template-areas:
      'img author'
      'text text';
    gap: 1.5rem;
  }

  img {
    grid-area: img;
    border-radius: 50%;

    @include respondTo(xs) {
      width: 10rem;
      height: 10rem;
    }
  }

  blockquote {
    grid-area: text;
    align-self: end;
  }

  figcaption {
    grid-area: author;

    @include respondTo(xs) {
      align-self: center;
    }
  }
}

.DashList {
  &-item {
    position: relative;
    @include text($colorText, $fontSizeNormal, $fontWeightNormal, inherit);
    padding-left: 1rem;

    &:not(:last-child) {
      margin-bottom: 0.5rem;
    }

    &::before {
      content: '';
      display: inline-block;
      width: 0.5rem;
      height: 1px;
      position: absolute;
      left: 0;
      top: rem(10px);
      background-color: $colorWhite;
    }
  }
}

.DotList {
  &-item {
    position: relative;
    @include text($colorWhite, $fontSizeNormal, $fontWeightNormal, inherit);
    padding-left: 1rem;

    &:not(:last-child) {
      margin-bottom: 0.5rem;
    }

    &::before {
      content: '';
      width: 0.25rem;
      height: 0.25rem;
      position: absolute;
      left: 0;
      top: 50%;
      background-color: $colorBlack;
      border-radius: 50%;
      transform: translateY(-50%);
    }
  }
}

.IconList {
  display: grid;
  gap: 0.25rem;

  li {
    display: flex;

    svg {
      flex-shrink: 0;
      margin-right: 0.5rem;
    }

    strong {
      font-weight: $fontWeightSemiBold;
    }

    a {
      &:focus,
      &:hover {
        text-decoration-thickness: 0.0625rem;
      }
    }
  }
}

.OrderedList {
  counter-reset: li-counter;

  &-item {
    position: relative;
    counter-increment: li-counter;
    @include text($colorText, $fontSizeNormal, $fontWeightNormal, inherit);
    padding-left: 1rem;

    &:not(:last-child) {
      margin-bottom: 0.5rem;
    }

    &::before {
      content: counter(li-counter) '.';
      position: absolute;
      top: 0;
      left: 0;
    }
  }
}

.OrderedPlayerList {
  display: grid;
  gap: 1rem;
  counter-reset: li-counter;

  @include respondFrom(sm) {
    grid-template-columns: repeat(2, 1fr);
  }

  @include respondFrom(md) {
    grid-template-columns: repeat(3, 1fr);
  }

  &-item {
    position: relative;
    counter-increment: li-counter;
    @include text($colorText, $fontSizeHuge, $fontWeightSemiBold, inherit);
    padding-left: 2rem;

    @include respondTo(sm) {
      font-size: $fontSizeBig;
    }

    @include respondTo(xs) {
      font-size: $fontSizeNormal;
    }

    &::before {
      content: counter(li-counter) '.';
      position: absolute;
      top: 0;
      left: 0;
    }
  }
}

ul {
  li {
    @include text($colorText, $fontSizeNormal, $fontWeightNormal, inherit);
  }
}

.UnstyledList {
  &-item {
    @include text($colorText, $fontSizeNormal, $fontWeightNormal, inherit);

    &:not(:last-child) {
      margin-bottom: 0.5rem;
    }
  }
}

.DocumentsList {
  li {
    display: flex;
    position: relative;

    &:not(:last-child) {
      margin-bottom: 0.75rem;
    }

    svg {
      flex-shrink: 0;
      margin-right: 1rem;
    }
  }
}

code,
kbd,
pre,
samp,
var {
  display: inline-flex;
  font-family: Consolas, 'Courier New', Courier, monospace;
  @include text($colorBlack, $fontSizeSmall, $fontWeightNormal, normal);
  background-color: $colorGrey--80;
  padding: 0.5rem 0.75rem;
}

hr {
  width: 100%;
  height: 2px;
  background-color: $colorGrey--90;
  border: none;
  border-radius: 1px;
  margin: 1.5rem 0;

  @include respondFrom(sm) {
    margin: 2.5rem 0;
  }
}
